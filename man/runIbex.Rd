% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runIbex.R
\name{runIbex}
\alias{runIbex}
\title{Ibex single cell calculation}
\usage{
runIbex(
  sc.data,
  chains = "Heavy",
  method = "encoder",
  encoder.model = "VAE",
  encoder.input = "AF",
  geometric.theta = pi,
  reduction.name = "Ibex"
)
}
\arguments{
\item{sc.data}{Single Cell Object in Seurat or Single Cell Experiment format}

\item{method}{"encoder" = using deep learning autoencoders or 
"geometric" = geomteric transformations based on the BLOSUM62 matrix}

\item{encoder.model}{"CNN" = convolutional neural network-based autoencoder, 
"VAE" = variation autoencoder, or "biLSTM" for Bidirectional LSTM}

\item{encoder.input}{Type of model to use
 \itemize{
   \item{Amino Acid Properties: "atchleyFactors", "crucianiProperties", "FASGAI", "kideraFactors", "MSWHIM", "ProtFP", "stScales", "tScales", "VHSE", "zScales"}
   \item{"OHE" for One Hot Encoding. Only option for biLSTM models}
}}

\item{geometric.theta}{angle to use for geometric transformation}

\item{reduction.name}{Keyword to save Ibex reduction. Useful if you want
to try Ibex with multiple parameters}

\item{chain}{Heavy or Light}
}
\value{
Seurat or SingleCellExperiment object with Ibex dimensions placed 
into the dimensional reduction slot.
}
\description{
Run Ibex algorithm with Seurat or Single Cell Experiment pipelines
}
\examples{
ibex_example <- runIbex(ibex_example, 
                        chains = "Heavy",
                        method = "encoder",
                        encoder.model = "VAE",
                        encoder.input = "AF")
                        
}
