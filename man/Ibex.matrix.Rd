% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ibex.matrix.R, R/runIbex.R
\name{Ibex.matrix}
\alias{Ibex.matrix}
\title{Ibex Matrix Interface}
\usage{
Ibex.matrix(
  input.data,
  chain = "Heavy",
  method = "encoder",
  encoder.model = "VAE",
  encoder.input = "AF",
  geometric.theta = pi/3
)

Ibex.matrix(
  input.data,
  chain = "Heavy",
  method = "encoder",
  encoder.model = "VAE",
  encoder.input = "AF",
  geometric.theta = pi/3
)
}
\arguments{
\item{input.data}{Input data, which can be:
\itemize{
  \item A Single Cell Object in Seurat or SingleCellExperiment format
  \item The output of \code{combineBCR()} from the \code{scRepertoire} package
}}

\item{chain}{Character. Specifies which chain to analyze:
\itemize{
  \item "Heavy" for the heavy chain
  \item "Light" for the light chain
}}

\item{method}{Character. The algorithm to use for generating latent vectors:
\itemize{
  \item "encoder" - Uses deep learning autoencoders
  \item "geometric" - Uses geometric transformations based on the BLOSUM62 matrix
}}

\item{encoder.model}{Character. The type of autoencoder model to use:
\itemize{
  \item "CNN" - Convolutional Neural Network-based autoencoder
  \item "VAE" - Variational Autoencoder
}}

\item{encoder.input}{Character. Specifies the input features for the encoder model. Options include:
\itemize{
  \item Amino Acid Properties: "atchleyFactors", "crucianiProperties", "FASGAI", "kideraFactors", "MSWHIM", "ProtFP", "stScales", "tScales", "VHSE", "zScales"
  \item "OHE" for One Hot Encoding (mandatory for biLSTM models)
}}

\item{geometric.theta}{Numeric. Angle (in radians) for the geometric transformation. Only used when \code{method = "geometric"}.}

\item{chains}{The immune receptor chain to encode: "Heavy", "Light", or "Both"}

\item{encoder.function}{The method to prepare the sequencing information - 
"onehotEncoder", "propertyEncoder", or "geometricEncoder"}

\item{aa.method.to.use}{The method or approach to use for the conversion:
\itemize{
  \item{Individual sets: atchleyFactors, crucianiProperties, FASGAI, kideraFactors, MSWHIM,
  ProtFP, stScales, tScales, VHSE, zScales"}
  \item{Multiple Sets: c("atchleyFactors", "VHSE") }
}}
}
\value{
A matrix of latent vectors generated by the specified method.
}
\description{
This function runs the Ibex algorithm to generate latent vectors from input data.
The output can be returned as a matrix, with options to choose between deep learning 
autoencoders or geometric transformations based on the BLOSUM62 matrix.
}
\examples{
# Using the encoder method with a variational autoencoder
ibex_values <- Ibex.matrix(ibex_example, 
                           chain = "Heavy",
                           method = "encoder",
                           encoder.model = "VAE",
                           encoder.input = "atchleyFactors")

# Using the geometric method with a specified angle
ibex_values <- Ibex.matrix(ibex_example, 
                           chain = "Heavy",
                           method = "geometric",
                           geometric.theta = pi)

}
\seealso{
\code{\link[immApex]{propertyEncoder}}, 
\code{\link[immApex]{geometricEncoder}}
}
