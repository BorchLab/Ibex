% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ibex.matrix.R, R/runIbex.R
\name{Ibex.matrix}
\alias{Ibex.matrix}
\title{Main Ibex interface}
\usage{
Ibex.matrix(
  input.data,
  chain = "Heavy",
  method = "encoder",
  encoder.model = "VAE",
  encoder.input = "AF",
  geometric.theta = pi/3
)

Ibex.matrix(
  input.data,
  chain = "Heavy",
  method = "encoder",
  encoder.model = "VAE",
  encoder.input = "AF",
  geometric.theta = pi/3
)
}
\arguments{
\item{input.data}{Single Cell Object in Seurat or Single Cell Experiment format or
the output of combineBCR() in scRepertoire}

\item{chain}{Heavy or Light}

\item{method}{"encoder" = using deep learning autoencoders or 
"geometric" = geomteric transformations based on the BLOSUM62 matrix}

\item{encoder.model}{"CNN" = convolutional neural network-based autoencoder, 
"VAE" = variation autoencoder, or "biLSTM" for Bidirectional LSTM}

\item{encoder.input}{Type of model to use
 \itemize{
   \item{Amino Acid Properties: "atchleyFactors", "crucianiProperties", "FASGAI", "kideraFactors", "MSWHIM", "ProtFP", "stScales", "tScales", "VHSE", "zScales"}
   \item{"OHE" for One Hot Encoding. Only option for biLSTM models}
}}

\item{geometric.theta}{angle to use for geometric transformation}

\item{chains}{The immune receptor chain to encode: "Heavy", "Light", or "Both"}

\item{encoder.function}{The method to prepare the sequencing information - 
"onehotEncoder", "propertyEncoder", or "geometricEncoder"}

\item{aa.method.to.use}{The method or approach to use for the conversion:
\itemize{
  \item{Individual sets: atchleyFactors, crucianiProperties, FASGAI, kideraFactors, MSWHIM,
  ProtFP, stScales, tScales, VHSE, zScales"}
  \item{Multiple Sets: c("atchleyFactors", "VHSE") }
}}
}
\value{
Ibex encoded values from the autoencoder
}
\description{
Use this to run the Ibex algorithm to return latent vectors in 
the form of a matrix or if you prefer.
}
\examples{
ibex_values <- Ibex.matrix(ibex_example, 
                          chains = "Heavy",
                          method = "encoder",
                          encoder.model = "VAE",
                          encoder.input = "AF")
                          
ibex_values <- Ibex.matrix(ibex_example, 
                          chains = "Heavy",
                          method = "geometric",
                          theta = pi)
                        
}
